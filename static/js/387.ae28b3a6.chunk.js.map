{"version":3,"file":"static/js/387.ae28b3a6.chunk.js","mappings":"gRAEaA,EAAWC,EAAAA,EAAAA,GAAH,sEAKRC,EAAOD,EAAAA,EAAAA,GAAH,qJAMJE,EAAOF,EAAAA,EAAAA,EAAH,2CAGJG,EAAYH,EAAAA,EAAAA,KAAH,6C,kBCiBtB,EAxBa,WACT,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAbHC,EAAAA,EAAAA,YAAU,WAAM,wCACR,8GAEwBC,EAAAA,EAAAA,IAAaN,GAFrC,OAEOO,EAFP,OAGCH,EAAQG,EAASJ,MAHlB,gDAMDK,QAAQC,IAAR,MANC,0DADQ,uBAAC,WAAD,wBAWbC,EACE,GAAE,CAACV,KACE,8BACFG,IAAS,SAACR,EAAD,UACLQ,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,cAAeC,EAAtC,EAAsCA,aAAtC,OAA0D,UAAClB,EAAD,gBAAqB,gBAAKmB,IAAMD,EAAY,UAAKE,EAAAA,IAAL,OAAoBF,GAAgBG,EAC9JC,IAAKL,EAAeM,MAAM,MAAMC,OAAO,QADuC,KAC/B,SAACvB,EAAD,UAAOgB,KAAsB,SAACf,EAAD,UAAYc,MADCD,EAArE,OAIrB,C,qNC7BKU,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BACjB,IAAMN,EAAe,kCAEhBO,EAAW,mCAAG,oGACAD,EAAAA,GAAAA,IAAA,sCAAyCD,IADzC,cACjBG,EADiB,yBAEhBA,GAFgB,2CAAH,qDAKXC,EAAe,mCAAG,WAAOC,GAAP,uFACJJ,EAAAA,GAAAA,IAAA,iBAAoBI,EAApB,oBAAkCL,IAD9B,cACrBG,EADqB,yBAEpBA,EAASG,MAFW,2CAAH,sDAKfC,EAAc,mCAAG,WAAOC,GAAP,uFACHP,EAAAA,GAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDQ,IADjD,cACpBL,EADoB,yBAEnBA,EAASG,MAFU,2CAAH,sDAKdtB,EAAY,mCAAG,WAAOqB,GAAP,uFACDJ,EAAAA,GAAAA,IAAA,iBAAoBI,EAApB,4BAA0CL,IADzC,cAClBG,EADkB,yBAEjBA,EAASG,MAFQ,2CAAH,sDAKZG,EAAe,mCAAG,WAAOJ,GAAP,uFACJJ,EAAAA,GAAAA,IAAA,iBAAoBI,EAApB,4BAA0CL,IADtC,cACrBG,EADqB,yBAEpBA,EAASG,MAFW,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/MoviesApi.js"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const CastList = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 20px;\n`\nexport const Item = styled.li`\n  border: 1px solid rgba(136, 136, 136, 0.453);\n  box-shadow: \n    0px 1px 0px 0px rgba(0, 0, 0, 0.1);\n    padding: 5px;\n`\nexport const Name = styled.p`\nfont-weight: 500;\n`\nexport const Character = styled.span`\nfont-style: italic;\n`","import { useState, useEffect } from 'react';\nimport React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from \"../../services/MoviesApi\"\nimport { BASE_URL_IMG } from \"../../services/MoviesApi\"\nimport {CastList,Item,Name,Character} from \"./Cast.styled\"\nimport defIm from \"../../image/unKnown.jpg\"\n\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null)\n useEffect(() => {\n         async function fetchMovieCast() {\n      try {\n          const castlist = await getMovieCast(movieId);\n          setCast(castlist.cast)\n\n      } catch (error) {\n        console.log(error);\n       \n      }\n    }\n    fetchMovieCast();\n     }, [movieId])\n    return <>\n        {cast && (<CastList>\n            {cast.map(({ cast_id, character, original_name, profile_path }) => (<Item key={cast_id}> <img src={ profile_path ?`${BASE_URL_IMG}${profile_path}` :defIm\n} alt={original_name} width=\"200\" height=\"300\"/> <Name>{original_name }</Name><Character>{character }</Character></Item>))}\n        </CastList>)}\n    </>\n}\n\nexport default Cast","import axios from 'axios';\n\nconst API_KEY = \"cadd79f1a1e49af0faca0dd1324eca3c\"\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n export const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w300'\n\nexport const getTrending = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`)\n    return response\n}\n\nexport const getMovieDetails = async (id) => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`)\n    return response.data\n}\n\nexport const getMovieSearch = async (query) => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`)\n    return response.data\n}\n\nexport const getMovieCast = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`)\n    return response.data\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`)\n    return response.data\n}"],"names":["CastList","styled","Item","Name","Character","movieId","useParams","useState","cast","setCast","useEffect","getMovieCast","castlist","console","log","fetchMovieCast","map","cast_id","character","original_name","profile_path","src","BASE_URL_IMG","defIm","alt","width","height","API_KEY","axios","getTrending","response","getMovieDetails","id","data","getMovieSearch","query","getMovieReviews"],"sourceRoot":""}