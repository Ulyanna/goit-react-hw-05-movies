{"version":3,"file":"static/js/779.5f1c6797.chunk.js","mappings":"8QAEaA,EAAOC,EAAAA,EAAAA,GAAH,6GAMJC,EAASD,EAAAA,EAAAA,EAAH,mFAMNE,EAAUF,EAAAA,EAAAA,EAAH,6C,SCmBpB,EA1BgB,WACZ,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdCC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAEuBC,EAAAA,EAAAA,IAAgBN,GAFvC,OAEOG,EAFP,OAGCC,EAAWD,EAAQI,SAHpB,gDAMDC,QAAQC,IAAR,MANC,0DADY,uBAAC,WAAD,wBAWjBC,EACE,GAAE,CAACV,KAEE,0BACH,wBACKG,EAAQQ,OAAS,EAAIR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAQC,EAAnB,EAAmBA,GAAnB,OAA4B,UAACnB,EAAD,YAAe,UAACE,EAAD,WAAUe,EAAV,SAA4B,SAACd,EAAD,UAAWe,MAA3CC,EAAvC,KAA+G,SAAChB,EAAD,0DAI5J,C,qNC7BKiB,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BACjB,IAAMC,EAAe,kCAEhBC,EAAW,mCAAG,oGACAF,EAAAA,GAAAA,IAAA,sCAAyCD,IADzC,cACjBI,EADiB,yBAEhBA,GAFgB,2CAAH,qDAKXC,EAAe,mCAAG,WAAON,GAAP,uFACJE,EAAAA,GAAAA,IAAA,iBAAoBF,EAApB,oBAAkCC,IAD9B,cACrBI,EADqB,yBAEpBA,EAASE,MAFW,2CAAH,sDAKfC,EAAc,mCAAG,WAAOC,GAAP,uFACHP,EAAAA,GAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDQ,IADjD,cACpBJ,EADoB,yBAEnBA,EAASE,MAFU,2CAAH,sDAKdG,EAAY,mCAAG,WAAOV,GAAP,uFACDE,EAAAA,GAAAA,IAAA,iBAAoBF,EAApB,4BAA0CC,IADzC,cAClBI,EADkB,yBAEjBA,EAASE,MAFQ,2CAAH,sDAKZhB,EAAe,mCAAG,WAAOS,GAAP,uFACJE,EAAAA,GAAAA,IAAA,iBAAoBF,EAApB,4BAA0CC,IADtC,cACrBI,EADqB,yBAEpBA,EAASE,MAFW,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/MoviesApi.js"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Item = styled.li`\nmargin-bottom: 20px;\nborder-bottom: 1px double rgb(145, 145, 145);\npadding: 10px;\n`\n\nexport const Author = styled.p`\nmargin-bottom: 10px;\nfont-size: 16px;\nfont-weight: 500;\n`\n\nexport const Content = styled.p`\nfont-style: italic;\n`","import { useState, useEffect } from 'react';\nimport React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"../../services/MoviesApi\"\nimport {Item,Author,Content} from \"./Reviews.styled\"\n\n\nconst Reviews = () => {\n    const { movieId } = useParams()\n    const [reviews, setReviews] = useState([])\n\n     useEffect(() => {\n         async function fetchMovieReviews() {\n      try {\n          const reviews = await getMovieReviews(movieId);\n          setReviews(reviews.results)      \n       \n      } catch (error) {\n        console.log(error);\n       \n      }\n    }\n    fetchMovieReviews();\n     }, [movieId])\n\n    return <div>\n        <ul>\n            {reviews.length > 0 ? reviews.map(({ author, content,id }) => <Item key={id}><Author>{ author} :</Author><Content>{ content}</Content></Item>) : <Content>We don`t have any reviews for this movie</Content>}\n        </ul>\n    </div>\n\n}\n\nexport default Reviews","import axios from 'axios';\n\nconst API_KEY = \"cadd79f1a1e49af0faca0dd1324eca3c\"\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n export const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w300'\n\nexport const getTrending = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`)\n    return response\n}\n\nexport const getMovieDetails = async (id) => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`)\n    return response.data\n}\n\nexport const getMovieSearch = async (query) => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`)\n    return response.data\n}\n\nexport const getMovieCast = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`)\n    return response.data\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`)\n    return response.data\n}"],"names":["Item","styled","Author","Content","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","results","console","log","fetchMovieReviews","length","map","author","content","id","API_KEY","axios","BASE_URL_IMG","getTrending","response","getMovieDetails","data","getMovieSearch","query","getMovieCast"],"sourceRoot":""}